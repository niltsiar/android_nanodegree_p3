import org.ajoberstar.grgit.Grgit
import org.eclipse.jgit.errors.RepositoryNotFoundException

apply plugin: 'com.android.application'
apply plugin: 'com.noveogroup.android.check'
apply plugin: 'com.getkeepsafe.dexcount'
apply plugin: 'me.tatarka.retrolambda'

repositories {
    maven { url "https://jitpack.io" }
}

//Version information
def versionMajor = VERSION_MAJOR.toInteger()
def versionMinor = VERSION_MINOR.toInteger()
def versionPatch = VERSION_PATCH.toInteger()
def versionRevision = getRevision()

def appVersionCode = versionMajor * 10000 + versionMinor * 1000 + versionPatch * 100
def appVersionName = "${versionMajor}.${versionMinor}.${versionPatch}"

android {
    compileSdkVersion "${versions.compileSdk}".toInteger()
    buildToolsVersion "${versions.buildTools}"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.udacity.stockhawk"
        minSdkVersion "${versions.minSdk}".toInteger()
        targetSdkVersion "${versions.targetSdk}".toInteger()
        versionCode appVersionCode
        versionName appVersionName
        multiDexEnabled true
    }

    buildTypes {

        release {
            minifyEnabled false
            shrinkResources false
            proguardFile "proguard-butterknife-7.pro"
            proguardFile "proguard-google-play-services.pro"
            proguardFile "proguard-guava.pro"
            proguardFile "proguard-square-okhttp3.pro"
            proguardFile "proguard-square-okio.pro"
            proguardFile "proguard-support-v7-appcompat.pro"
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    //noinspection GroovyMissingReturnStatement
    lintOptions {
        warning 'InvalidPackage'
    }
}

check {
    checkstyle { config hard() }
    findbugs { config hard() }
    pmd {
        config hard()
        skip true
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${versions.support}"
    compile "com.android.support:recyclerview-v7:${versions.support}"
    compile "com.android.support:design:${versions.support}"
    compile "com.jakewharton:butterknife:${versions.butterknife}"
    compile "com.yahoofinance-api:YahooFinanceAPI:${versions.yahoo_finance_api}"
    compile "com.jakewharton.timber:timber:${versions.timber}"
    compile "net.sf.opencsv:opencsv:${versions.opencsv}"
    compile "com.github.PhilJay:MPAndroidChart:${versions.mp_android_chart}"

    testCompile "junit:junit:${versions.junit}"

    annotationProcessor "com.jakewharton:butterknife-compiler:${versions.butterknife}"

    retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:${versions.retrolambda}"
}

android.applicationVariants.all { variant ->
    if (variant.buildType.name == "debug") {
        variant.mergedFlavor.versionName += "-${versionRevision}"
    }
}

def static getRevision() {
    def revision
    try {
        revision = getGitRevision()
    } catch (RepositoryNotFoundException e) {
        revision = 0
    }
    return revision
}

def static getGitRevision() {
    def git = Grgit.open(dir: '.')
    return git.head().abbreviatedId
}
